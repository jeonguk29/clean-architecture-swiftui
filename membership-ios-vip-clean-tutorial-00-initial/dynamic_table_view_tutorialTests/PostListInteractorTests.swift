//
//  PostListInteractorTests.swift
//  dynamic_table_view_tutorial
//
//  Created by 정정욱 on 7/9/24.
//  Copyright (c) 2024 Tuentuenna. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import dynamic_table_view_tutorial
import XCTest

class PostListInteractorTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: PostListInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupPostListInteractor()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupPostListInteractor()
    {
        sut = PostListInteractor()
    }
    
    // MARK: Test doubles
    
    // 같은 타입인 PostListPresentationLogic 스파이를 가지고 있는 것임
    class PostListPresentationLogicSpy: PostListPresentationLogic
    {
        var presentSomethingCalled = false
        
        func presentPostList(response: PostList.FetchPostList.Response)
        {
            presentSomethingCalled = true
        }
    }
    
    // MARK: Tests
    
    func testFetchPostList()
    {
        // Given
        let spy = PostListPresentationLogicSpy()
        sut.presenter = spy
        let request = PostList.FetchPostList.Request(count: 10)
        
        // When
        sut.fetchPostList(request: request)
        
        // Then
        XCTAssertTrue(spy.presentSomethingCalled, "doSomething(request:) should ask the presenter to format the result")
    }
}
